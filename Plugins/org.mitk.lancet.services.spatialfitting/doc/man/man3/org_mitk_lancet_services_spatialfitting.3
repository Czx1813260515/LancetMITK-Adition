.TH "org_mitk_lancet_services_spatialfitting" 3 "Tue Nov 22 2022" "Version 1.0.0" "LancetSpatialFitting" \" -*- nroff -*-
.ad l
.nh
.SH NAME
org_mitk_lancet_services_spatialfitting \- Org_mitk_lancet_services_spatialfitting
.PP
 \- Spatial fitting data processing module\&.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBNavigationToolCollector\fP"
.br
.RI "This is the header file that declares the navigation data collection filter\&. "
.ti -1c
.RI "class \fBNavigationToolToNavigationToolFilter\fP"
.br
.RI "This is the header file that declares the data processing filter from space to space coordinate system of space fitting\&. "
.ti -1c
.RI "class \fBNavigationToolToSpaceFilter\fP"
.br
.RI "This is the header file that declares the data processing filter from the tool of space fitting to the tool coordinate system\&. "
.ti -1c
.RI "class \fBPipelineBuilder\fP"
.br
.RI "This is an abstract pipeline data producer class\&. "
.ti -1c
.RI "class \fBPipelineManager\fP"
.br
.RI "$Document description$ "
.ti -1c
.RI "class \fBPointAccuracyDate\fP"
.br
.RI "This is the declaration header file of space point calculation\&. "
.ti -1c
.RI "class \fBRoboticsRegisterDirector\fP"
.br
.RI "This is the header file of the decision-maker for the registration and construction of the robot arm\&. "
.ti -1c
.RI "class \fBAbstractDirector\fP"
.br
.RI "This is the decision-maker class of the abstract generator pattern\&. "
.ti -1c
.RI "class \fBAbstractPipelineBuilder\fP"
.br
.RI "Abstract interface class definition of Builder\&. "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBLancetSpatialFittingNameSpace\fP"
.br
.RI "Global macro definition header file\&. "
.in -1c
.SH "Detailed Description"
.PP 
Spatial fitting data processing module\&. 

\fBNamespaces\fP
.br
 \fClancet::spatial_fitting\fP Contains all functions and declarations related to spatial fit\&.
.PP
\fBDetailed Description\fP
.br
.PP
The spatial computing module mainly aims at data calculation or processing between the mechanical arm, NDI and images\&. These spatial calculations are complex, and the spatial fitting module just shields these complex operations from the UI or users\&.
.PP
To use this module function in mitk, you need to add the following commands in manifest_headers\&.cmake:
.PP
.PP
.nf
// \&.\&.\&.
set(Require-Plugin org_mitk_lancet_services_spatialfitting)
.fi
.PP
.PP
\fBClass stream:\fP
.br
 
.PP
\fBSpatial Fitting Overview\fP
.br
 Spatial fitting is a functional module for spatial calculation based on Mitk framework\&. Spatial fitting provides common functions in spatial processing, aiming to simplify the compilation of spatial processing in Mitk\&.
.br
.PP
Spatial data processing is mainly driven by the pipeline mode\&. In the module, you can implement the functions or data you want by extending user-defined filters or builders\&.
.PP
\fBCreate a custom filter\fP
.br
 To create a custom filter, subclass mitk::NavigationDataToNavigationDataFilter and override its GenerateData interface\&. This interface is the processing unit of the pipeline filter\&. In the processing unit, you can process the input data and store the processed data in the output cache object\&.
.PP
After subclassing the mitk::NavigationDataToNavigationDataFilter, you should integrate the customized filter into the module\&. The specification in the module is Mitk, that is, you need to use the code macro to extend the following specification code\&.
.PP
.IP "\(bu" 2
\fCmitkClassMacro(className, SuperClassName)\fP Extending the basic specification interface of Mitk class\&.
.IP "\(bu" 2
\fCitkNewMacro(x)\fP Extend the basic specification interface created by the Itk class\&.
.PP
.PP
.PP
.nf
class MyCustomFilter : public mitk::NavigationDataToNavigationDataFilter
{
public:
  mitkClassMacro(MyCustomFilter, mitk::NavigationDataToNavigationDataFilter)
  itkNewMacro(MyCustomFilter)
  MyCustomFilter() {}
protected:
  virtual void GenerateData() override { // Do something\&. }
};
.fi
.PP
.PP
\fBCreate a custom filter builder\fP
.br
.PP
The filter builder is based on the creator model, and the role of the filter builder is the constructor\&. When we extend a custom filter, we need to extend a custom filter builder to create ideal pipeline data without changing the original code\&.
.PP
Create a custom filter builder, You need to subclass \fBAbstractPipelineBuilder\fP and override the \fBAbstractPipelineBuilder::Reset()\fP and \fBAbstractPipelineBuilder::GetOutput()\fP interfaces, which will function as the internal operation of the spatial fitting model\&.
.PP
After subclassing the mitk::NavigationDataToNavigationDataFilter, you should integrate the customized filter into the module\&. The specification in the module is Mitk, that is, you need to use the code macro to extend the following specification code\&.
.PP
.IP "\(bu" 2
\fCmitkClassMacroItkParent(className, SuperClassName)\fP Extending the standard basic interface of subclassed itk classes\&.
.IP "\(bu" 2
\fCitkNewMacro(x)\fP Extend the basic specification interface created by the Itk class\&.
.PP
.PP
.PP
.nf
class MyCustomFilterBuilder : public AbstractPipelineBuilder
{
public:
  mitkClassMacroItkParent(MyCustomFilterBuilder, AbstractPipelineBuilder)
  itkNewMacro(MyCustomFilterBuilder)
  MyCustomFilterBuilder() {}
public:
  virtual void Reset() override {}
  virtual itk::SmartPointer<PipelineManager> GetOutput() override { // Do something\&. }
};
.fi
.PP
.PP
\fBCreate a custom build director\fP
.br
.PP
The construction supervisor is the director of spatial fitting planning and construction of data pipeline\&. The construction supervisor decides the processing procedure and flow direction of a data pipeline\&.
.PP
To create a custom construction supervisor, you need to subclass \fBAbstractDirector\fP, rewrite the \fBAbstractDirector::Builder()\fP interface, and implement planning tasks within the interface\&.
.PP
After subclassing the mitk::NavigationDataToNavigationDataFilter, you should integrate the customized filter into the module\&. The specification in the module is Mitk, that is, you need to use the code macro to extend the following specification code\&.
.PP
.IP "\(bu" 2
\fCmitkClassMacroItkParent(className, SuperClassName)\fP Extending the standard basic interface of subclassed itk classes\&.
.IP "\(bu" 2
\fCitkNewMacro(x)\fP Extend the basic specification interface created by the Itk class\&.
.PP
.PP
.PP
.nf
class MyCustomDirector : public AbstractDirector
{
public:
  mitkClassMacroItkParent(MyCustomDirector, AbstractDirector)
  itkNewMacro(MyCustomDirector)
  MyCustomDirector() {}
public:
  virtual bool Builder() override { // Do something\&. }
};
.fi
.PP
 
.SH "Macro Definition Documentation"
.PP 
.SS "#define LancetSpatialFittingNameSpace"

.PP
Global macro definition header file\&. 
.PP
\fBCopyright (C)2022-2023 Hangzhou Lancet Robot Co\&., Ltd\&. All rights reserved\&.\fP
.RS 4

.RE
.PP
\fBVersion\fP
.RS 4
V1\&.0\&.0 
.RE
.PP
\fBDate\fP
.RS 4
2022-11-18 10:32:42
.RE
.PP
\fBModify History\fP
.RS 4

.IP "1." 4
Sun initialization the version for 2022-11-18 10:32:42\&.
.PP
.RE
.PP
\fBRemarks\fP
.RS 4
Non 
.RE
.PP

.PP
Definition at line \fB19\fP of file \fBlancetSpatialFittingGlobal\&.h\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for LancetSpatialFitting from the source code\&.
