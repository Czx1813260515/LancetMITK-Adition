.TH "AbstractDirector" 3 "Tue Nov 22 2022" "Version 1.0.0" "LancetSpatialFitting" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AbstractDirector \- This is the decision-maker class of the abstract generator pattern\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <lancetSpatialFittingAbstractDirector\&.h>\fP
.PP
Inherits itk::Object\&.
.PP
Inherited by \fBRoboticsRegisterDirector\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBAbstractDirectorPrivateImp\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBmitkClassMacroItkParent\fP (\fBAbstractDirector\fP, itk::Object)"
.br
.ti -1c
.RI "\fBAbstractDirector\fP ()"
.br
.ti -1c
.RI "virtual bool \fBBuilder\fP ()=0"
.br
.RI "Implement the construction order or method of pipeline data\&. "
.ti -1c
.RI "virtual itk::SmartPointer< \fBAbstractPipelineBuilder\fP > \fBGetBuilder\fP () const"
.br
.ti -1c
.RI "virtual void \fBSetBuilder\fP (itk::SmartPointer< \fBAbstractPipelineBuilder\fP > builder)"
.br
.in -1c
.SH "Detailed Description"
.PP 
This is the decision-maker class of the abstract generator pattern\&. 

Strictly speaking, the supervisor class is not necessarily required in the program\&. The client code can directly call the creation steps in a specific order\&. However, it is very suitable to put various routine construction processes into the supervisor class for repeated use in the program\&.
.PP
In addition, for client code, the supervisor class completely hides the det- ails of product construction\&. The client only needs to associate a generator with the supervisor class, and then use the supervisor class to construct the product, so that the construction result can be obtained from the generator\&.
.PP
\fBClass diagram:\fP
.br
 
.PP
\fBExample:\fP
.br
 
.PP
.nf
// Building Entity Decision Maker and Generator Objects\&.
AbstractDirector::Pointer director = MyDirector::New();
director->SetBuilder(MyPipelineBuilder::New());
// Using Polymorphic Features to Call the Construction Method of Entity 
// Decision Maker\&.
director->Builder();
//Get the pipeline data object produced by the builder\&.
PipelineManager::Pointer pipeline = director->GetBuilder()->GetOutput();

.fi
.PP
.PP
\fBAuthor\fP
.RS 4
Sun 
.RE
.PP
\fBVersion\fP
.RS 4
V1\&.0\&.0 
.RE
.PP
\fBDate\fP
.RS 4
2022-11-18 16:45:08 
.RE
.PP
\fBRemarks\fP
.RS 4
Non
.RE
.PP
Contact: sh4a01@163.com 
.PP
Definition at line \fB68\fP of file \fBlancetSpatialFittingAbstractDirector\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "AbstractDirector::AbstractDirector ()"

.PP
Definition at line \fB11\fP of file \fBlancetSpatialFittingAbstractDirector\&.cpp\fP\&.
.PP
.nf
12     : imp(std::make_shared<AbstractDirectorPrivateImp>())
13 {
14 }
.fi
.SH "Member Function Documentation"
.PP 
.SS "virtual bool AbstractDirector::Builder ()\fC [pure virtual]\fP"

.PP
Implement the construction order or method of pipeline data\&. In the spatial fitting module, the functional components of various pipe- line data objects may be the same component, but the production order has some deviations\&. The derived class needs to correctly control the produce order of pipeline data for this interface\&.
.PP
\fBReturns\fP
.RS 4
True Production succeeded, otherwise it failed\&. 
.RE
.PP

.PP
Implemented in \fBRoboticsRegisterDirector\fP\&.
.SS "itk::SmartPointer< \fBAbstractPipelineBuilder\fP > AbstractDirector::GetBuilder () const\fC [virtual]\fP"

.PP
Definition at line \fB16\fP of file \fBlancetSpatialFittingAbstractDirector\&.cpp\fP\&.
.PP
.nf
17 {
18     return itk::SmartPointer<AbstractPipelineBuilder>();
19 }
.fi
.SS "AbstractDirector::mitkClassMacroItkParent (\fBAbstractDirector\fP, itk::Object)"

.SS "void AbstractDirector::SetBuilder (itk::SmartPointer< \fBAbstractPipelineBuilder\fP > builder)\fC [virtual]\fP"

.PP
Definition at line \fB21\fP of file \fBlancetSpatialFittingAbstractDirector\&.cpp\fP\&.
.PP
.nf
22 {
23 }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for LancetSpatialFitting from the source code\&.
