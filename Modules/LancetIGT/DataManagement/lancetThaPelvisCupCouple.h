
#ifndef THAPELVISCUPCOUPLE_H
#define THAPELVISCUPCOUPLE_H

#include <mitkImageToImageFilter.h>

// The following header file is generated by CMake and thus it's located in
// the build directory. It provides an export macro for classes and functions
// that you want to be part of the public interface of your module.
#include <MitkLancetIGTExports.h>

#include "lancetThaCupObject.h"
#include "lancetThaPelvisObject.h"
#include "mitkDataNode.h"
#include "mitkPointSet.h"
#include "mitkSurface.h"

namespace lancet
{
	/**Documentation
	  * \brief 
	  *
	  * \ingroup IGT
	  */
	class MITKLANCETIGT_EXPORT ThaPelvisCupCouple : public itk::DataObject
	{
	public:
		mitkClassMacroItkParent(ThaPelvisCupCouple, itk::DataObject);
		itkFactorylessNewMacro(Self)
		itkCloneMacro(Self)

		itkGetMacro(PelvisObject, lancet::ThaPelvisObject::Pointer);
		itkSetMacro(PelvisObject, lancet::ThaPelvisObject::Pointer);

		itkGetMacro(CupObject, lancet::ThaCupObject::Pointer);
		itkSetMacro(CupObject, lancet::ThaCupObject::Pointer);

		itkGetMacro(vtkMatrix_pelvisFrameToCupFrame, vtkSmartPointer<vtkMatrix4x4>);
		// itkSetMacro(vtkMatrix_pelvisFrameToCupFrame, vtkSmartPointer<vtkMatrix4x4>);
		
		itkGetMacro(CupInclination_supine, double);
		// itkSetMacro(CupInclination_supine, double);
		itkGetMacro(CupInclination_stand, double);
		// itkSetMacro(CupInclination_stand, double);
		itkGetMacro(CupInclination_sit, double);
		// itkSetMacro(CupInclination_sit, double);
		itkGetMacro(CupVersion_supine, double);
		// itkSetMacro(CupVersion_supine, double);
		itkGetMacro(CupVersion_stand, double);
		// itkSetMacro(CupVersion_stand, double);
		itkGetMacro(CupVersion_sit, double);
		// itkSetMacro(CupVersion_sit, double);

		itkGetMacro(CupCOR_SI, double);
		itkGetMacro(CupCOR_ML, double);
		itkGetMacro(CupCOR_AP, double);

		/* update the m_vtkMatrix_groupGeometry of m_PelvisObject and m_CupObject;
		 * update m_vtkMatrix_coupleGeometry */
		void SetCoupleGeometry(vtkSmartPointer<vtkMatrix4x4> newMatrix);
		itkGetMacro(vtkMatrix_coupleGeometry, vtkSmartPointer<vtkMatrix4x4>);

		// initialize pelvisFrame to cupFrame matrix and move the cupObject to the initial position 
		void InitializePelvisFrameToCupFrameMatrix();

		/* Translate or rotate cup
		 * translateOrRotate: translate(0), rotate(1)
		 * direction: x-axis(0), y-axis(1), z-axis(2)
		 * step: mm or degree
		 */
		void AdjustCup(int translateOrRotate, int direction, double step);

	protected:

		ThaPelvisCupCouple();
		ThaPelvisCupCouple(const ThaPelvisCupCouple& other);
		~ThaPelvisCupCouple() override;
		
		// Update cup inclination and cup version, called by AdjustCup()
		void UpdateCupAngles();
		// Update m_CupCOR_SI, m_CupCOR_ML and m_CupCOR_AP, called by AdjustCup()
		void UpdateRelativeCupCOR();

		// Translate cup: x axis of pelvisFrame
		void TranslateCup_x(double length);
		// Translate cup: y axis of pelvisFrame
		void TranslateCup_y(double length);
		// Translate cup: z axis of pelvisFrame
		void TranslateCup_z(double length);
		// Rotate cup in degree (the rotation axis passes through the cupFrame origin): x axis of pelvisFrame
		void RotateCup_x(double angle);
		// Rotate cup in degree (the rotation axis passes through the cupFrame origin): y axis of pelvisFrame
		void RotateCup_y(double angle);
		// Rotate cup in degree (the rotation axis passes through the cupFrame origin): z axis of pelvisFrame
		void RotateCup_z(double angle);

		// the pelvisObject
		lancet::ThaPelvisObject::Pointer m_PelvisObject;

		// the cupObject
		lancet::ThaCupObject::Pointer m_CupObject;

		// pelvisObject internal frame to cupObject internal frame
		vtkSmartPointer<vtkMatrix4x4> m_vtkMatrix_pelvisFrameToCupFrame;

		// the geometry matrix of the pelvis-cup couple
		vtkSmartPointer<vtkMatrix4x4> m_vtkMatrix_coupleGeometry;

		// cup inclination: supine
		double m_CupInclination_supine{ 0 };
		// cup inclination: stand
		double m_CupInclination_stand{ 0 };
		// cup inclination: sit
		double m_CupInclination_sit{ 0 };
		// cup version: supine
		double m_CupVersion_supine{ 0 };
		// cup version: stand
		double m_CupVersion_stand{ 0 };
		// cup version: sit
		double m_CupVersion_sit{ 0 };

		// cupCOR relative to pelvisCOR with supine pelvic tilt: Superior(+) or inferior(-)
		double m_CupCOR_SI{ 0 };
		// cupCOR relative to pelvisCOR with supine pelvic tilt: Medial(+) or lateral(-) 
		double m_CupCOR_ML{ 0 };
		// cupCOR relative to pelvisCOR with supine pelvic tilt: Anterior(+) or posterior(-)
		double m_CupCOR_AP{ 0 };



	};
}

#endif
