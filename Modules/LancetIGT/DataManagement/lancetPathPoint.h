/*============================================================================

The Medical Imaging Interaction Toolkit (MITK)

Copyright (c) German Cancer Research Center (DKFZ)
All rights reserved.

Use of this source code is governed by a 3-clause BSD license that can be
found in the LICENSE file.

============================================================================*/


// The following header file is generated by CMake and thus it's located in
// the build directory. It provides an export macro for classes and functions
// that you want to be part of the public interface of your module.
#ifndef LANCETPATHPOINT_H
#define LANCETPATHPOINT_H
#include <itkDataObject.h>
#include <MitkLancetIGTExports.h>
#include <mitkDataNode.h>
#include <mitkAffineTransform3D.h>
namespace lancet
{
	/**Documentation
	  * \brief An object of this class represents a navigation object in the view of the software.
	  *        A few informations like an identifier, a object, a surface and a mitk image
	  *        are stored in such an object. The classes PointPathReader and PointPathWriter
	  *        are availiable to write/read object to/from the harddisc. If you need a collection
	  *        of navigation object the class PointPathStorage could be used.
	  *
	  * \ingroup IGT
	  */
	class MITKLANCETIGT_EXPORT PointPath : public itk::DataObject
	{
	public:
		mitkClassMacroItkParent(PointPath, itk::DataObject);
		itkFactorylessNewMacro(Self);
		itkCloneMacro(Self);


    
		//############################################################

	protected:

    PointPath();
    PointPath(const PointPath& other);
    ~PointPath() override;
    itk::LightObject::Pointer InternalClone() const override;

	  //## data structure of a navigation tool object ##
    mitk::Point3D::pointer m_Point;
	};
}

#endif // LANCETPATHPOINT_H
